@prefix : <http://vorlon/xk#> .
@prefix xs: <http://www.w3.org/2001/XMLSchema#> .
@prefix err: <http://www.w3.org/2005/xqt-errors#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix pimo: <http://http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#> . 
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

:systemctl :man-label  "SYSTEMCTL(1)" ;
	   :name "systemctl - control the systemd system and service manager" ;
	   :synopsis "systemctl [OPTIONS...] COMMAND [NAME...]" ;
	   :description "systemctl may be used to introspect and control the state of the systemd(1) system and service manager." ;
       	:options """
       The following options are understood:

       -h, --help
           Prints a short help text and exits.

       --version
           Prints a short version string and exits.

       -t, --type=
           The argument should be a comma separated list of unit types such as
           service and socket, or unit load states such as loaded and masked
           (types and states can be mixed).

           If one of the arguments is a unit type, when listing units, limit
           display to certain unit types. Otherwise units of all types will be
           shown.

           If one of the arguments is a unit load state, when listing units,
           limit display to certain unit types. Otherwise units of in all load
           states will be shown.

           As a special case, if one of the arguments is help, a list of
           allowed values will be printed and the program will exit.

       -p, --property=
           When showing unit/job/manager properties with the show command,
           limit display to certain properties as specified as argument. If
           not specified all set properties are shown. The argument should be
           a comma-separated list of property names, such as MainPID. If
           specified more than once all properties with the specified names
           are shown.

       -a, --all
           When listing units, show all loaded units, regardless of their
           state, including inactive units. When showing unit/job/manager
           properties, show all properties regardless whether they are set or
           not.

           To list all units installed on the system, use the list-unit-files
           command instead.

       --reverse
           Show reverse dependencies between units with list-dependencies,
           i.e. units with dependencies of type Wants= or Requires= on the
           given unit.

       --after, --before
           Show which units are started after, resp. before with
           list-dependencies.

       --failed
           When listing units, show only failed units. Do not confuse with
           --fail.

       --full
           Do not ellipsize unit names, cgroup members, and truncate unit
           descriptions in the output of list-units and list-jobs.

       --fail
           If the requested operation conflicts with a pending unfinished job,
           fail the command. If this is not specified the requested operation
           will replace the pending job, if necessary. Do not confuse with
           --failed.

       --show-types
           When showing sockets, show the type of the socket.

       --irreversible
           Mark this transaction's jobs as irreversible. This prevents future
           conflicting transactions from replacing these jobs. The jobs can
           still be cancelled using the cancel command.

       --ignore-dependencies
           When enqueuing a new job ignore all its dependencies and execute it
           immediately. If passed no required units of the unit passed will be
           pulled in, and no ordering dependencies will be honored. This is
           mostly a debugging and rescue tool for the administrator and should
           not be used by applications.

       -i, --ignore-inhibitors
           When system shutdown or a sleep state is requested, ignore
           inhibitor locks. Applications can establish inhibitor locks to
           avoid that certain important operations (such as CD burning or
           suchlike) are interrupted by system shutdown or a sleep state. Any
           user may take these locks and privileged users may override these
           locks. If any locks are taken, shutdown and sleep state requests
           will normally fail (regardless if privileged or not) and a list of
           active locks is printed. However if --ignore-inhibitors is
           specified the locks are ignored and not printed, and the operation
           attempted anyway, possibly requiring additional privileges.

       -q, --quiet
           Suppress output to standard output in snapshot, is-active,
           is-failed, enable and disable.

       --no-block
           Do not synchronously wait for the requested operation to finish. If
           this is not specified the job will be verified, enqueued and
           systemctl will wait until it is completed. By passing this argument
           it is only verified and enqueued.

       --no-legend
           Do not print a legend, i.e. the column headers and the footer with
           hints.

       --no-pager
           Do not pipe output into a pager.

       --system
           Talk to the systemd system manager. (Default)

       --user
           Talk to the systemd manager of the calling user.

       --no-wall
           Don't send wall message before halt, power-off, reboot.

       --global
           When used with enable and disable, operate on the global user
           configuration directory, thus enabling or disabling a unit file
           globally for all future logins of all users.

       --no-reload
           When used with enable and disable, do not implicitly reload daemon
           configuration after executing the changes.

       --no-ask-password
           When used with start and related commands, disables asking for
           passwords. Background services may require input of a password or
           passphrase string, for example to unlock system hard disks or
           cryptographic certificates. Unless this option is specified and the
           command is invoked from a terminal systemctl will query the user on
           the terminal for the necessary secrets. Use this option to switch
           this behavior off. In this case the password must be supplied by
           some other means (for example graphical password agents) or the
           service might fail. This also disables querying the user for
           authentication for privileged operations.

       --kill-who=
           When used with kill, choose which processes to kill. Must be one of
           main, control or all to select whether to kill only the main
           process of the unit, the control process or all processes of the
           unit. If omitted defaults to all.

       -s, --signal=
           When used with kill, choose which signal to send to selected
           processes. Must be one of the well known signal specifiers such as
           SIGTERM, SIGINT or SIGSTOP. If omitted defaults to SIGTERM.

       -f, --force
           When used with enable, overwrite any existing conflicting symlinks.

           When used with halt, poweroff, reboot or kexec execute the selected
           operation without shutting down all units. However, all processes
           will be killed forcibly and all file systems are unmounted or
           remounted read-only. This is hence a drastic but relatively safe
           option to request an immediate reboot. If --force is specified
           twice for these operations, they will be executed immediately
           without terminating any processes or umounting any file systems.
           Warning: specifying --force twice with any of these operations
           might result in data loss.

       --root=
           When used with enable/disable/is-enabled (and related commands),
           use alternative root path when looking for unit files.

       --runtime
           When used with enable, disable, is-enabled (and related commands),
           make changes only temporarily, so that they are lost on the next
           reboot. This will have the effect that changes are not made in
           subdirectories of /etc but in /run, with identical immediate
           effects, however, since the latter is lost on reboot, the changes
           are lost too.

           Similar, when used with set-cgroup-attr, unset-cgroup-attr,
           set-cgroup and unset-cgroup, make changes only temporarily, so that
           they are lost on the next reboot.

       -H, --host
           Execute operation remotely. Specify a hostname, or username and
           hostname separated by @, to connect to. This will use SSH to talk
           to the remote systemd instance.

       -P, --privileged
           Acquire privileges via PolicyKit before executing the operation.

       -n, --lines=
           When used with status controls the number of journal lines to show,
           counting from the most recent ones. Takes a positive integer
           argument. Defaults to 10.

       -o, --output=
           When used with status controls the formatting of the journal
           entries that are shown. For the available choices see
           journalctl(1). Defaults to short.

       --plain
           When used with list-dependencies the output is printed as a list
           instead of a tree.""" ;	   
	   :list-units """
           List known units (subject to limitations specified with -t).

           This is the default command.""" ;
	   :list-sockets """
           List socket units ordered by the listening address. Produces output
           similar to

               LISTEN           UNIT                        ACTIVATES
               /dev/initctl     systemd-initctl.socket      systemd-initctl.service
               ...
               [::]:22          sshd.socket                 sshd.service
               kobject-uevent 1 systemd-udevd-kernel.socket systemd-udevd.service

               5 sockets listed.


           Note: because the addresses might contains spaces, this output is
           not suitable for programatic consumption.

           See also the options --show-types, --all, and --failed.""" ;

       	   :start-NAME "Start (activate) one or more units specified on the command line." ;
       	   :stop-NAME "Stop (deactivate) one or more units specified on the command line." ;
       	   :reload-NAME """
           Asks all units listed on the command line to reload their
           configuration. Note that this will reload the service-specific
           configuration, not the unit configuration file of systemd. If you
           want systemd to reload the configuration file of a unit use the
           daemon-reload command. In other words: for the example case of
           Apache, this will reload Apache's httpd.conf in the web server, not
           the apache.service systemd unit file.

           This command should not be confused with the daemon-reload or load
           commands.""" ;
	   :restart-NAME """
           Restart one or more units specified on the command line. If the
           units are not running yet they will be started.""" ;
	   :try-restart-NAME """
           Restart one or more units specified on the command line if the
           units are running. Do nothing if units are not running. Note that
           for compatibility with Red Hat init scripts condrestart is
           equivalent to this command.""" ;
	   :reload-or-restart-NAME """
           Reload one or more units if they support it. If not, restart them
           instead. If the units are not running yet they will be started.""" ;
	   :reload-or-try-restart-NAME """
           Reload one or more units if they support it. If not, restart them
           instead. Do nothing if the units are not running. Note that for
           compatibility with SysV init scripts force-reload is equivalent to
           this command.""" ;
	   :isolate-NAME """
           Start the unit specified on the command line and its dependencies
           and stop all others.

           This is similar to changing the runlevel in a traditional init
           system. The isolate command will immediately stop processes that
           are not enabled in the new unit, possibly including the graphical
           environment or terminal you are currently using.

           Note that this is allowed only on units where AllowIsolate= is
           enabled. See systemd.unit(5) for details.""" ;
	   :kill-NAME """
           Send a signal to one or more processes of the unit. Use --kill-who=
           to select which process to kill. Use --kill-mode= to select the
           kill mode and --signal= to select the signal to send.""" ;
	   :is-active-NAME """
           Check whether any of the specified units are active (i.e. running).
           Returns an exit code 0 if at least one is active, non-zero
           otherwise. Unless --quiet is specified this will also print the
           current unit state to STDOUT.""" ;
	   :is-failed-NAME """
           Check whether any of the specified units are failed. Returns an
           exit code 0 if at least one is failed, non-zero otherwise. Unless
           --quiet is specified this will also print the current unit state to
           STDOUT.""" ;
	   :status-NAME-PID """
           Show terse runtime status information about one or more units,
           followed by most recent log data from the journal. If no units are
           specified, show all units (subject to limitations specified with
           -t). If a PID is passed show information about the unit the process
           belongs to.

           This function is intended to generate human-readable output. If you
           are looking for computer-parsable output, use show instead.""" ;
	   :show-NAME-JOB """
           Show properties of one or more units, jobs, or the manager itself.
           If no argument is specified properties of the manager will be
           shown. If a unit name is specified properties of the unit is shown,
           and if a job id is specified properties of the job is shown. By
           default, empty properties are suppressed. Use --all to show those
           too. To select specific properties to show use --property=. This
           command is intended to be used whenever computer-parsable output is
           required. Use status if you are looking for formatted
           human-readable output.""" ;
	   :get-cgroup-attr-NAME-ATTRIBUTE """
           Retrieve the specified control group attributes of the specified
           unit. Takes a unit name and one or more attribute names such as
           cpu.shares. This will output the current values of the specified
           attributes, separated by new-lines. For attributes that take list
           of items the output will be new-line separated, too. This operation
           will always try to retrieve the data in question from the kernel
           first, and if that is not available use the configured values
           instead. Instead of low-level control group attribute names
           high-level pretty names may be used, as used for unit execution
           environment configuration, see systemd.exec(5) for details. For
           example, passing memory.limit_in_bytes and MemoryLimit is
           equivalent.""" ;
	   :set-cgroup-attr-NAME-ATTRIBUTE-VALUE """
           Set the specified control group attribute of the specified unit to
           the specified value. Takes a unit name and an attribute name such
           as cpu.shares, plus one or more values (multiple values may only be
           used for attributes that take multiple values). This operation will
           immediately update the kernel attribute for this unit and
           persistently store this setting for later reboots (unless --runtime
           is passed, in which case the setting is not saved persistently and
           only valid until the next reboot.) Instead of low-level control
           group attribute names high-level pretty names may be used, as used
           for unit execution environment configuration, see systemd.exec(5)
           for details. For example, passing memory.limit_in_bytes and
           MemoryLimit is equivalent. This operation will implicitly create a
           control group for the unit in the controller the attribute belongs
           to, if needed. For attributes that take multiple values, this
           operation will append the specified values to the previously set
           values list (use unset-cgroup-attr to reset the list explicitly).
           For attributes that take a single value only the list will be reset
           implicitly.""" ;
	   :unset-cgroup-attr-NAME-ATTRIBUTE """
           Unset the specified control group attributes of the specified unit.
           Takes a unit name and one or more attribut names such as
           cpu.shares. This operation might or might not have an immediate
           effect on the current kernel attribute value. This will remove any
           persistently stored configuration values for this attribute (as set
           with set-cgroup-attr before), unless --runtime is passed, in which
           case the configuration is reset only until the next reboot. Again,
           high-level control group attributes may be used instead of the
           low-level kernel ones. For attributes which take multiple values,
           all currently set values are reset.""" ;
       	   :set-unset-cgroup-NAME-CGROUP """
           Add or remove a unit to/from a specific control group hierarchy
           and/or control group path. Takes a unit name, plus a control group
           specification in the syntax CONTROLLER:PATH or CONTROLLER. In the
           latter syntax (where the path is omitted) the default unit control
           group path is implied. Examples: cpu or cpu:/foo/bar. If a unit is
           removed from a control group hierarchy all its processes will be
           moved to the root group of the hierarchy and all control group
           attributes will be reset. These operations are immediately
           reflected in the kernel hierarchy, and stored persistently to disk
           (unless --runtime is passed).""" ;
	   :help-NAME-PID """
           Show manual pages for one or more units, if available. If a PID is
           passed the manual pages for the unit the process of the PID belongs
           to is shown.""" ;
	   :reset-failed-NAME """
           Reset the failed state of the specified units, or if no unit name
           is passed of all units. When a unit fails in some way (i.e. process
           exiting with non-zero error code, terminating abnormally or timing
           out) it will automatically enter the failed state and its exit code
           and status is recorded for introspection by the administrator until
           the service is restarted or reset with this command.""" ;
	   :list-unit-files """
           List installed unit files.""" ;
	   :enable-NAME """
           Enable one or more unit files or unit file instances, as specified
           on the command line. This will create a number of symlinks as
           encoded in the [Install] sections of the unit files. After the
           symlinks have been created the systemd configuration is reloaded
           (in a way that is equivalent to daemon-reload) to ensure the
           changes are taken into account immediately. Note that this does not
           have the effect that any of the units enabled are also started at
           the same time. If this is desired a separate start command must be
           invoked for the unit. Also note that in case of instance
           enablement, symlinks named same as instances are created in install
           location, however they all point to the same template unit file.

           This command will print the actions executed. This output may be
           suppressed by passing --quiet.

           Note that this operation creates only the suggested symlinks for
           the units. While this command is the recommended way to manipulate
           the unit configuration directory, the administrator is free to make
           additional changes manually, by placing or removing symlinks in the
           directory. This is particularly useful to create configurations
           that deviate from the suggested default installation. In this case
           the administrator must make sure to invoke daemon-reload manually
           as necessary, to ensure his changes are taken into account.

           Enabling units should not be confused with starting (activating)
           units, as done by the start command. Enabling and starting units is
           orthogonal: units may be enabled without being started and started
           without being enabled. Enabling simply hooks the unit into various
           suggested places (for example, so that the unit is automatically
           started on boot or when a particular kind of hardware is plugged
           in). Starting actually spawns the daemon process (in case of
           service units), or binds the socket (in case of socket units), and
           so on.

           Depending on whether --system, --user or --global is specified this
           enables the unit for the system, for the calling user only or for
           all future logins of all users. Note that in the last case no
           systemd daemon configuration is reloaded.""" ;
	   :disable-NAME """
           Disables one or more units. This removes all symlinks to the
           specified unit files from the unit configuration directory, and
           hence undoes the changes made by enable. Note however that this
           removes all symlinks to the unit files (i.e. including manual
           additions), not just those actually created by enable. This call
           implicitly reloads the systemd daemon configuration after
           completing the disabling of the units. Note that this command does
           not implicitly stop the units that are being disabled. If this is
           desired an additional stop command should be executed afterwards.

           This command will print the actions executed. This output may be
           suppressed by passing --quiet.

           This command honors --system, --user, --global in a similar way as
           enable.""" ;
	   :is-enabled-NAME """
           Checks whether any of the specified unit files are enabled (as with
           enable). Returns an exit code of 0 if at least one is enabled,
           non-zero otherwise. Prints the current enable status. To suppress
           this output use --quiet.""" ;
	   :reenable-NAME """
           Reenable one or more unit files, as specified on the command line.
           This is a combination of disable and enable and is useful to reset
           the symlinks a unit is enabled with to the defaults configured in
           the [Install] section of the unit file.""" ;
	   :preset-NAME """
           Reset one or more unit files, as specified on the command line, to
           the defaults configured in the preset policy files. This has the
           same effect as disable or enable, depending how the unit is listed
           in the preset files. For more information on preset policy format
           see systemd.preset(5). For more information on the concept of
           presets please consult the Preset[1] document.""" ;
	   :mask-NAME """
           Mask one or more unit files, as specified on the command line. This
           will link these units to /dev/null, making it impossible to start
           them. This is a stronger version of disable, since it prohibits all
           kinds of activation of the unit, including manual activation. Use
           this option with care.""" ;
	   :unmask-NAME """
           Unmask one or more unit files, as specified on the command line.
           This will undo the effect of mask.""" ;
	   :link-FILENAME """
           Link a unit file that is not in the unit file search paths into the
           unit file search path. This requires an absolute path to a unit
           file. The effect of this can be undone with disable. The effect of
           this command is that a unit file is available for start and other
           commands although it isn't installed directly in the unit search
           path.""" ;
	   :load-NAME """
           Load one or more units specified on the command line. This will
           simply load their configuration from disk, but not start them. To
           start them you need to use the start command which will implicitly
           load a unit that has not been loaded yet. Note that systemd garbage
           collects loaded units that are not active or referenced by an
           active unit. This means that units loaded this way will usually not
           stay loaded for long. Also note that this command cannot be used to
           reload unit configuration. Use the daemon-reload command for that.
           All in all, this command is of little use except for debugging.

           This command should not be confused with the daemon-reload or
           reload.""" ;
	   :list-jobs "List jobs that are in progress." ;
	   :cancel-JOB """
           Cancel one or more jobs specified on the command line by their
           numeric job IDs. If no job id is specified, cancel all pending
           jobs.""" ;
	   :dump """
           Dump server status. This will output a (usually very long) human
           readable manager status dump. Its format is subject to change
           without notice and should not be parsed by applications.""" ;
	   :list-dependencies-NAME """
           Shows required and wanted units of the specified unit. If no unit
           is specified default.target is implied. Target units are
           recursively expanded. When --all is passed all other units are
           recursively expanded as well.""" ;
	   :snapshot-NAME """
           Create a snapshot. If a snapshot name is specified, the new
           snapshot will be named after it. If none is specified an automatic
           snapshot name is generated. In either case, the snapshot name used
           is printed to STDOUT, unless --quiet is specified.

           A snapshot refers to a saved state of the systemd manager. It is
           implemented itself as a unit that is generated dynamically with
           this command and has dependencies on all units active at the time.
           At a later time the user may return to this state by using the
           isolate command on the snapshot unit.

           Snapshots are only useful for saving and restoring which units are
           running or are stopped, they do not save/restore any other state.
           Snapshots are dynamic and lost on reboot.""" ;
	   :delete-NAME "Remove a snapshot previously created with snapshot." ;
	   :daemon-reload """
           Reload systemd manager configuration. This will reload all unit
           files and recreate the entire dependency tree. While the daemon is
           reloaded, all sockets systemd listens on on behalf of user
           configuration will stay accessible.

           This command should not be confused with the load or reload
           commands.""" ;
	   :daemon-reexec """
           Reexecute the systemd manager. This will serialize the manager
           state, reexecute the process and deserialize the state again. This
           command is of little use except for debugging and package upgrades.
           Sometimes it might be helpful as a heavy-weight daemon-reload.
           While the daemon is reexecuted all sockets systemd listens on on
           behalf of user configuration will stay accessible.""" ;
	   :show-environment """
           Dump the systemd manager environment block. The environment block
           will be dumped in straight-forward form suitable for sourcing into
           a shell script. This environment block will be passed to all
           processes the manager spawns.""" ;
	   :set-environment-VARIABLE-VALUE """
           Set one or more systemd manager environment variables, as specified
           on the command line.""" ;
	   :unset-environment-VARIABLE """
           Unset one or more systemd manager environment variables. If only a
           variable name is specified it will be removed regardless of its
           value. If a variable and a value are specified the variable is only
           removed if it has the specified value.""" ;
	   :default """
           Enter default mode. This is mostly equivalent to isolate
           default.target.""" ;
	   :rescue """
           Enter rescue mode. This is mostly equivalent to isolate
           rescue.target but also prints a wall message to all users.""" ;
	   :emergency """
           Enter emergency mode. This is mostly equivalent to isolate
           emergency.target but also prints a wall message to all users.""" ;
	   :halt """
           Shut down and halt the system. This is mostly equivalent to start
           halt.target --irreversible but also prints a wall message to all
           users. If combined with --force shutdown of all running services is
           skipped, however all processes are killed and all file systems are
           unmounted or mounted read-only, immediately followed by the system
           halt. If --force is specified twice the operation is immediately
           executed without terminating any processes or unmounting any file
           systems. This may result in data loss.""" ;
	   :poweroff """
           Shut down and power-off the system. This is mostly equivalent to
           start poweroff.target --irreversible but also prints a wall message
           to all users. If combined with --force shutdown of all running
           services is skipped, however all processes are killed and all file
           systems are unmounted or mounted read-only, immediately followed by
           the powering off. If --force is specified twice the operation is
           immediately executed without terminating any processes or
           unmounting any file systems. This may result in data loss.""" ;
	   :reboot """
           Shut down and reboot the system. This is mostly equivalent to start
           reboot.target --irreversible but also prints a wall message to all
           users. If combined with --force shutdown of all running services is
           skipped, however all processes are killed and all file systems are
           unmounted or mounted read-only, immediately followed by the reboot.
           If --force is specified twice the operation is immediately executed
           without terminating any processes or unmounting any file systems.
           This may result in data loss.""" ;
	   :kexec """
           Shut down and reboot the system via kexec. This is mostly
           equivalent to start kexec.target --irreversible but also prints a
           wall message to all users. If combined with --force shutdown of all
           running services is skipped, however all processes are killed and
           all file systems are unmounted or mounted read-only, immediately
           followed by the reboot.""" ;
	   :exit """
           Ask the systemd manager to quit. This is only supported for user
           service managers (i.e. in conjunction with the --user option) and
           will fail otherwise.""" ;
	   :suspend """
           Suspend the system. This will trigger activation of the special
           suspend.target target.""" ;
	   :hibernate """
           Hibernate the system. This will trigger activation of the special
           hibernate.target target.""" ;
	   :hybrid-sleep """
           Hibernate and suspend the system. This will trigger activation of
           the special hybrid-sleep.target target.""" ;
	   :switch-root-ROOT-INIT """
           Switches to a different root directory and executes a new system
           manager process below it. This is intended for usage in initial RAM
           disks ("initrd"), and will transition from the initrd's system
           manager process (a.k.a "init" process) to the main system manager
           process. Takes two arguments: the directory to make the new root
           directory, and the path to the new system manager binary below it
           to execute as PID 1. If the latter is omitted or the empty string,
           a systemd binary will automatically be searched for and used as
           init. If the system manager path is omitted or equal to the empty
           string the state of the initrd's system manager process is passed
           to the main system manager, which allows later introspection of the
           state of the services involved in the initrd boot.""" ;
	   :exit-status "On success 0 is returned, a non-zero failure code otherwise." ;
	   :environment """
       $SYSTEMD_PAGER
           Pager to use when --no-pager is not given; overrides $PAGER.
           Setting this to an empty string or the value cat is equivalent to
           passing --no-pager.""" ; 
	   :seeAlso :systemd , 
	   :systemadm , 
	   :journalctl , 
	   :loginctl , 
	   :systemd-unit ,
       	   :systemd-special , 
	   :wall , 
	   :systemd-preset ;
	   :notes """
        1. Preset
           http://freedesktop.org/wiki/Software/systemd/Preset""" .

:systemd :seeAlso :systemd-system-conf , 
	 :locale-conf , 
	 :systemctl , 
	 :journalctl ,
    	 :systemd-notify , 
	 :daemon , 
	 :sd-daemon , 
	 :systemd-unit ,
    	 :systemd-special , 
	 :pkg-config , 
	 :kernel-command-line , 
	 :bootup ,
    	 :systemd-directives .

